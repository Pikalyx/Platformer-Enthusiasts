[gd_scene load_steps=16 format=3 uid="uid://oo5rtgn88nui"]

[ext_resource type="PackedScene" uid="uid://c06h0yv06ktmh" path="res://Character/player.tscn" id="1_2j0oh"]
[ext_resource type="Texture2D" uid="uid://usy1lv4nqova" path="res://Art/awesomeCavePixelArt.png" id="1_u8msu"]
[ext_resource type="Script" path="res://FinalBossCam.gd" id="2_2yv34"]
[ext_resource type="Texture2D" uid="uid://bepiwx23qga2o" path="res://Art/Legacy-Fantasy - High Forest 2.3/Assets/red.png" id="2_5ro1l"]
[ext_resource type="Script" path="res://ClosetDoor.gd" id="4_tm4xm"]
[ext_resource type="PackedScene" uid="uid://62q6lqpn4mw0" path="res://Boss.tscn" id="5_wglk5"]
[ext_resource type="PackedScene" uid="uid://chv2bq7qykksp" path="res://health_flute.tscn" id="6_nke6d"]
[ext_resource type="Script" path="res://LevelTransitionArea.gd" id="7_gso8k"]
[ext_resource type="Script" path="res://SummonTimerLabel.gd" id="8_feafo"]
[ext_resource type="AudioStream" uid="uid://bq3km38g1edga" path="res://Sound/FinalBossMusic.mp3" id="10_7cphs"]
[ext_resource type="Script" path="res://ClosetSensitiveMusic.gd" id="11_yqeep"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_tw0c8"]
texture = ExtResource("2_5ro1l")
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
10:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
11:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:2/0 = 0
12:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:2/0/physics_layer_0/angular_velocity = 0.0
12:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
13:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
11:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:3/0 = 0
12:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:3/0/physics_layer_0/angular_velocity = 0.0
12:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:3/0 = 0
13:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:3/0/physics_layer_0/angular_velocity = 0.0
13:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:4/0 = 0
13:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:4/0/physics_layer_0/angular_velocity = 0.0
13:4/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:5/0 = 0
12:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:5/0/physics_layer_0/angular_velocity = 0.0
12:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:5/0 = 0
13:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:5/0/physics_layer_0/angular_velocity = 0.0
13:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
10:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:6/0 = 0
11:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:6/0/physics_layer_0/angular_velocity = 0.0
11:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:6/0 = 0
12:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:6/0/physics_layer_0/angular_velocity = 0.0
12:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:6/0 = 0
13:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:6/0/physics_layer_0/angular_velocity = 0.0
13:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:7/0 = 0
10:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:7/0/physics_layer_0/angular_velocity = 0.0
10:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:7/0 = 0
11:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:7/0/physics_layer_0/angular_velocity = 0.0
11:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:7/0 = 0
12:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:7/0/physics_layer_0/angular_velocity = 0.0
12:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:7/0 = 0
13:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:7/0/physics_layer_0/angular_velocity = 0.0
13:7/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -8, 8, -8, 8, 8, 8, 8, -8)
4:8/0/physics_layer_0/polygon_0/one_way_margin = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:8/0 = 0
10:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:8/0/physics_layer_0/angular_velocity = 0.0
10:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:8/0 = 0
11:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:8/0/physics_layer_0/angular_velocity = 0.0
11:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:8/0 = 0
12:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:8/0/physics_layer_0/angular_velocity = 0.0
12:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:8/0 = 0
13:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:8/0/physics_layer_0/angular_velocity = 0.0
13:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:9/0 = 0
11:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:9/0/physics_layer_0/angular_velocity = 0.0
11:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:9/0 = 0
12:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:9/0/physics_layer_0/angular_velocity = 0.0
12:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:9/0 = 0
13:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:9/0/physics_layer_0/angular_velocity = 0.0
13:9/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:10/0 = 0
2:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:10/0/physics_layer_0/angular_velocity = 0.0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:10/0 = 0
3:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:10/0/physics_layer_0/angular_velocity = 0.0
3:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:10/0 = 0
6:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:10/0/physics_layer_0/angular_velocity = 0.0
6:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:10/0 = 0
7:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:10/0/physics_layer_0/angular_velocity = 0.0
7:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:10/0 = 0
8:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:10/0/physics_layer_0/angular_velocity = 0.0
8:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:10/0 = 0
9:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:10/0/physics_layer_0/angular_velocity = 0.0
9:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:10/0 = 0
10:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:10/0/physics_layer_0/angular_velocity = 0.0
10:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:10/0 = 0
11:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:10/0/physics_layer_0/angular_velocity = 0.0
11:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:10/0 = 0
12:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:10/0/physics_layer_0/angular_velocity = 0.0
12:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:10/0 = 0
13:10/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:10/0/physics_layer_0/angular_velocity = 0.0
13:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:11/0 = 0
2:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:11/0/physics_layer_0/angular_velocity = 0.0
2:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:11/0 = 0
3:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:11/0/physics_layer_0/angular_velocity = 0.0
3:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:11/0 = 0
6:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:11/0/physics_layer_0/angular_velocity = 0.0
6:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:11/0 = 0
7:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:11/0/physics_layer_0/angular_velocity = 0.0
7:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:11/0 = 0
8:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:11/0/physics_layer_0/angular_velocity = 0.0
8:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:11/0 = 0
9:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:11/0/physics_layer_0/angular_velocity = 0.0
9:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:11/0 = 0
10:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:11/0/physics_layer_0/angular_velocity = 0.0
10:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:11/0 = 0
11:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:11/0/physics_layer_0/angular_velocity = 0.0
11:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:11/0 = 0
12:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:11/0/physics_layer_0/angular_velocity = 0.0
12:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:11/0 = 0
13:11/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:11/0/physics_layer_0/angular_velocity = 0.0
13:11/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:12/0 = 0
2:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:12/0/physics_layer_0/angular_velocity = 0.0
2:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:12/0 = 0
3:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:12/0/physics_layer_0/angular_velocity = 0.0
3:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:12/0 = 0
4:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:12/0/physics_layer_0/angular_velocity = 0.0
4:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -8, 8, 8, 8, 8, -8)
5:12/0 = 0
5:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:12/0/physics_layer_0/angular_velocity = 0.0
5:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, -8, 8, 8, 8, 8, -8)
6:12/0 = 0
6:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:12/0/physics_layer_0/angular_velocity = 0.0
6:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:12/0 = 0
7:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:12/0/physics_layer_0/angular_velocity = 0.0
7:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:12/0 = 0
8:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:12/0/physics_layer_0/angular_velocity = 0.0
8:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:12/0 = 0
9:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:12/0/physics_layer_0/angular_velocity = 0.0
9:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:12/0 = 0
10:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:12/0/physics_layer_0/angular_velocity = 0.0
10:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:12/0 = 0
11:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:12/0/physics_layer_0/angular_velocity = 0.0
11:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:12/0 = 0
12:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:12/0/physics_layer_0/angular_velocity = 0.0
12:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:12/0 = 0
13:12/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:12/0/physics_layer_0/angular_velocity = 0.0
13:12/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:13/0 = 0
2:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:13/0/physics_layer_0/angular_velocity = 0.0
2:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:13/0 = 0
3:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:13/0/physics_layer_0/angular_velocity = 0.0
3:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:13/0 = 0
4:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:13/0/physics_layer_0/angular_velocity = 0.0
4:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:13/0 = 0
5:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:13/0/physics_layer_0/angular_velocity = 0.0
5:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:13/0 = 0
6:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:13/0/physics_layer_0/angular_velocity = 0.0
6:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
7:13/0 = 0
7:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:13/0/physics_layer_0/angular_velocity = 0.0
7:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
8:13/0 = 0
8:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:13/0/physics_layer_0/angular_velocity = 0.0
8:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
9:13/0 = 0
9:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:13/0/physics_layer_0/angular_velocity = 0.0
9:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
10:13/0 = 0
10:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:13/0/physics_layer_0/angular_velocity = 0.0
10:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
11:13/0 = 0
11:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:13/0/physics_layer_0/angular_velocity = 0.0
11:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
12:13/0 = 0
12:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:13/0/physics_layer_0/angular_velocity = 0.0
12:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
13:13/0 = 0
13:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:13/0/physics_layer_0/angular_velocity = 0.0
13:13/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
14:13/0 = 0
14:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:13/0/physics_layer_0/angular_velocity = 0.0
15:13/0 = 0
15:13/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:13/0/physics_layer_0/angular_velocity = 0.0
14:14/0 = 0
14:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:14/0/physics_layer_0/angular_velocity = 0.0
15:14/0 = 0
15:14/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:14/0/physics_layer_0/angular_velocity = 0.0
14:15/0 = 0
14:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:15/0/physics_layer_0/angular_velocity = 0.0
15:15/0 = 0
15:15/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:15/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_nphd0"]
physics_layer_0/collision_layer = 1
sources/2 = SubResource("TileSetAtlasSource_tw0c8")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_putcj"]
size = Vector2(39, 276.313)

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_midoo"]
radius = 27.0
height = 80.0

[node name="carter_level_1" type="Node2D"]

[node name="Background" type="Sprite2D" parent="."]
position = Vector2(746, -70)
scale = Vector2(1.25469, 1.125)
texture = ExtResource("1_u8msu")

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_nphd0")
format = 2
layer_0/name = "Ground "
layer_0/tile_data = PackedInt32Array(327679, 262146, 12, 393215, 262146, 13, 262144, 327682, 12, 327680, 327682, 13, 262145, 262146, 12, 327681, 262146, 13, 262146, 327682, 12, 327682, 327682, 13, 262147, 262146, 12, 327683, 262146, 13, 262148, 327682, 12, 327684, 327682, 13, 262149, 262146, 12, 327685, 262146, 13, 262150, 327682, 12, 327686, 327682, 13, 262151, 262146, 12, 327687, 262146, 13, 262152, 327682, 12, 327688, 327682, 13, 262153, 262146, 12, 327689, 262146, 13, 262154, 327682, 12, 327690, 327682, 13, 262155, 262146, 12, 327691, 262146, 13, 262156, 327682, 12, 327692, 327682, 13, 262157, 262146, 12, 327693, 262146, 13, 262158, 327682, 12, 327694, 327682, 13, 262159, 262146, 12, 327695, 262146, 13, 262160, 327682, 12, 327696, 327682, 13, 262161, 262146, 12, 327697, 262146, 13, 262162, 327682, 12, 327698, 327682, 13, 262163, 262146, 12, 327699, 262146, 13, 262164, 327682, 12, 327700, 327682, 13, 262165, 262146, 12, 327701, 262146, 13, 262166, 327682, 12, 327702, 327682, 13, 262167, 262146, 12, 327703, 262146, 13, 262168, 327682, 12, 327704, 327682, 13, 262169, 262146, 12, 327705, 262146, 13, 262170, 327682, 12, 327706, 327682, 13, 262171, 262146, 12, 327707, 262146, 13, 262172, 262146, 12, 327708, 262146, 13, 262173, 327682, 12, 327709, 327682, 13, 262174, 262146, 12, 327710, 262146, 13, 65533, 131074, 8, 131069, 131074, 9, 196605, 131074, 10, 262141, 131074, 11, 327677, 131074, 12, 393213, 131074, 13, 65534, 196610, 10, 131070, 196610, 11, 196606, 196610, 10, 262142, 196610, 11, 327678, 196610, 12, 393214, 196610, 13, -2, 196610, 9, -1, 262146, 9, -65536, 327682, 9, -65535, 262146, 9, -65534, 327682, 9, -65533, 262146, 9, -65532, 327682, 9, -65531, 262146, 9, -65530, 327682, 9, -65529, 262146, 9, -65528, 327682, 9, -65527, 262146, 9, -65526, 327682, 9, -65525, 262146, 9, -65524, 327682, 9, -65523, 262146, 9, -65539, 131074, 8, -65538, 196610, 8, -65537, 262146, 8, -131072, 327682, 8, -131071, 393218, 8, -131070, 458754, 8, -131069, 131074, 8, -131068, 196610, 8, -131067, 262146, 8, -131066, 327682, 8, -131065, 393218, 8, -131064, 458754, 8, -131063, 131074, 8, -131062, 196610, 8, -131061, 262146, 8, -131060, 327682, 8, -131059, 393218, 8, -131058, 458754, 8, -3, 524290, 12, -65540, 524290, 12, -4, 524290, 12, 65532, 524290, 12, 131068, 524290, 12, 196604, 524290, 12, 262140, 524290, 12, 327676, 524290, 12, 393212, 524290, 12, 458748, 524290, 12, 458749, 524290, 12, 458750, 524290, 12, 458751, 524290, 12, 393216, 524290, 12, 393217, 524290, 12, 393218, 524290, 12, 393219, 524290, 12, 393220, 524290, 12, 393221, 524290, 12, 393222, 524290, 12, 393223, 524290, 12, 393224, 524290, 12, 393225, 524290, 12, 393226, 524290, 12, 393227, 524290, 12, 393228, 524290, 12, 393229, 524290, 12, 393230, 524290, 12, 393231, 524290, 12, -131077, 524290, 12, -65541, 524290, 12, -5, 524290, 12, 65531, 524290, 12, 131067, 524290, 12, 196603, 524290, 12, 262139, 524290, 12, 327675, 524290, 12, 393211, 524290, 12, 458747, 524290, 12, 458746, 524290, 12, 393210, 524290, 12, 327674, 524290, 12, 262138, 524290, 12, 196602, 524290, 12, 131066, 524290, 12, 65530, 524290, 12, -6, 524290, 12, -65542, 524290, 12, -65543, 524290, 12, -7, 524290, 12, 65529, 524290, 12, 131065, 524290, 12, 196601, 524290, 12, 262137, 524290, 12, 327673, 524290, 12, 393209, 524290, 12, 458745, 524290, 12, 393208, 524290, 12, 327672, 524290, 12, 262136, 524290, 12, 196600, 524290, 12, 131064, 524290, 12, 65528, 524290, 12, -8, 524290, 12, -65544, 524290, 12, -65545, 524290, 12, -9, 524290, 12, -10, 524290, 12, 65526, 524290, 12, 131063, 524290, 12, 196599, 524290, 12, 262135, 524290, 12, 327671, 524290, 12, 393207, 524290, 12, 458743, 524290, 12, 458744, 524290, 12, 65527, 524290, 12, -65546, 524290, 13, 131062, 524290, 12, 196598, 524290, 12, 262134, 524290, 12, 327670, 524290, 12, 393206, 524290, 12, 458742, 524290, 12, -65522, 327682, 9, -65521, 262146, 9, -65520, 327682, 9, -65519, 262146, 9, 262175, 327682, 12, 327711, 327682, 13, 262176, 262146, 12, 327712, 262146, 13, 262177, 327682, 12, 327713, 327682, 13, 262178, 262146, 12, 327714, 262146, 13, 262179, 327682, 12, 327715, 327682, 13, 262180, 262146, 12, 327716, 262146, 13, 262181, 327682, 12, 327717, 327682, 13, 262182, 262146, 12, 327718, 262146, 13, 262183, 327682, 12, 327719, 327682, 13, 262184, 262146, 12, 327720, 262146, 13, 262185, 327682, 12, 327721, 327682, 13, 262186, 262146, 12, 327722, 262146, 13, 262187, 327682, 12, 327723, 327682, 13, 262188, 262146, 12, 327724, 262146, 13, 262189, 327682, 12, 327725, 327682, 13, 262190, 262146, 12, 327726, 262146, 13, 262191, 327682, 12, 327727, 327682, 13, 262192, 262146, 12, 327728, 262146, 13, 262193, 327682, 12, 327729, 327682, 13, 262194, 262146, 12, 327730, 262146, 13, 262195, 327682, 12, 327731, 327682, 13, 262196, 262146, 12, 327732, 262146, 13, 262197, 262146, 12, 327733, 262146, 13, 262198, 327682, 12, 327734, 327682, 13, 262199, 262146, 12, 327735, 262146, 13, 262200, 262146, 12, 327736, 262146, 13, -131057, 262146, 8, -131056, 327682, 8, -131055, 262146, 8, -131054, 327682, 8, -65518, 327682, 9, -131053, 262146, 8, -65517, 262146, 9, -131052, 327682, 8, -65516, 327682, 9, -131051, 262146, 8, -65515, 262146, 9, -131050, 327682, 8, -65514, 327682, 9, -131049, 262146, 8, -65513, 262146, 9, -131048, 327682, 8, -65512, 327682, 9, -131047, 262146, 8, -65511, 262146, 9, -131046, 327682, 8, -65510, 327682, 9, -131045, 262146, 8, -65509, 262146, 9, -131044, 327682, 8, -65508, 327682, 9, -131043, 262146, 8, -65507, 262146, 9, -131042, 262146, 8, -65506, 262146, 9, -131041, 327682, 8, -65505, 327682, 9, -131040, 262146, 8, -65504, 262146, 9, -131039, 327682, 8, -65503, 327682, 9, -131038, 262146, 8, -65502, 262146, 9, -65501, 851970, 11, -196573, 589826, 4, -131037, 589826, 5, -327645, 196610, 9, -262109, 589826, 5, -458717, 589826, 4, -393181, 131074, 11, -589789, 589826, 4, -524253, 589826, 5, -720861, 196610, 11, -655325, 589826, 5, 262201, 327682, 12, 327737, 327682, 13, 262202, 262146, 12, 327738, 262146, 13, 262203, 327682, 12, 327739, 327682, 13, 262204, 262146, 12, 327740, 262146, 13, 262205, 327682, 12, 327741, 327682, 13, 262206, 262146, 12, 327742, 262146, 13, 262207, 327682, 12, 327743, 327682, 13, 262208, 262146, 12, 327744, 262146, 13, 262209, 327682, 12, 327745, 327682, 13, 262210, 262146, 12, 327746, 262146, 13, 262211, 327682, 12, 327747, 327682, 13, 262212, 393218, 12, 327748, 393218, 13, 262213, 458754, 12, 327749, 458754, 13, -786397, 196610, 10, -851931, 655362, 11, -851930, 720898, 11, -851929, 786434, 11, -851928, 589826, 11, -851927, 655362, 11, -851926, 720898, 11, -851925, 786434, 11, -851924, 589826, 11, -851923, 655362, 11, -851922, 720898, 11, -851921, 786434, 11, -851920, 589826, 11, -851919, 655362, 11, -851918, 720898, 11, -851917, 786434, 11, -851916, 589826, 11, -851915, 655362, 11, -851914, 720898, 11, -851913, 786434, 11, -851912, 589826, 11, -851911, 655362, 11, -851910, 720898, 11, -851909, 786434, 11, -851908, 589826, 11, -851907, 655362, 11, -851906, 720898, 11, -851905, 786434, 11, -851904, 589826, 11, -851903, 655362, 11, -851902, 720898, 11, -851901, 786434, 11, -851900, 786434, 3, -851899, 393218, 13, -851932, 589826, 11, -851933, 589826, 3, -917468, 589826, 10, -917467, 655362, 10, -917466, 720898, 10, -917465, 786434, 10, -917464, 589826, 10, -917463, 655362, 10, -917462, 720898, 10, -917461, 786434, 10, -917460, 589826, 10, -917459, 655362, 10, -917458, 720898, 10, -917457, 786434, 10, -917456, 589826, 10, -917455, 655362, 10, -917454, 720898, 10, -917453, 786434, 10, -917452, 589826, 10, -917451, 655362, 10, -917450, 720898, 10, -917449, 786434, 10, -917448, 589826, 10, -917447, 655362, 10, -917446, 720898, 10, -917445, 786434, 10, -917444, 589826, 10, -917443, 655362, 10, -917442, 720898, 10, -917441, 786434, 10, -917440, 589826, 10, -917439, 655362, 10, -917438, 720898, 10, -917437, 786434, 10, -917436, 589826, 10, -917435, 393218, 12, 131140, 393218, 10, 196676, 393218, 11, 68, 393218, 10, 65604, 393218, 11, -131004, 393218, 10, -65468, 393218, 11, -786364, 786434, 4, -720828, 393218, 11, -589756, 393218, 11, -524220, 393218, 10, -458684, 393218, 11, -393148, 393218, 8, -327612, 393218, 9, -262076, 393218, 10, -196540, 393218, 11, -655292, 393218, 10, 65605, 196610, 4, 131141, 196610, 5, 196677, 196610, 6, -131003, 196610, 4, -65467, 196610, 5, 69, 196610, 6, -327611, 196610, 4, -262075, 196610, 5, -196539, 196610, 6, -524219, 196610, 4, -458683, 196610, 5, -720827, 196610, 4, -655291, 196610, 5, -589755, 196610, 6, -786363, 851970, 4, -262110, 131074, 10, -196574, 131074, 11, -393182, 131074, 10, -327646, 131074, 11, -524254, 131074, 10, -458718, 131074, 11, -655326, 131074, 11, -589790, 131074, 11, -786398, 131074, 11, -720862, 131074, 10, -917434, 458754, 12, -851898, 458754, 13, -327644, 851970, 11, -393180, 196610, 9, -458715, 196610, 9, -393179, 851970, 11, -458714, 851970, 11, -524249, 851970, 11, -589784, 851970, 11, -655319, 851970, 11, -720854, 851970, 11, -786389, 851970, 11, -524250, 196610, 9, -589785, 196610, 9, -655320, 196610, 9, -786390, 196610, 9, -524252, 131074, 8, -458716, 131074, 8, -589788, 131074, 8, -655324, 131074, 8, -524251, 131074, 8, -655322, 131074, 8, -589786, 131074, 8, -589787, 131074, 8, -720855, 196610, 9, -720856, 131074, 8, -720857, 131074, 8, -720858, 131074, 8, -655321, 131074, 8, -655323, 131074, 8, -720859, 131074, 8, -720860, 131074, 8, -786396, 131074, 8, -786395, 131074, 8, -786394, 131074, 8, -786393, 131074, 8, -786392, 131074, 8, -786391, 131074, 8, -327613, 524290, 11, -393150, 524290, 11, -458687, 524290, 11, -524224, 524290, 11, -589761, 524290, 11, -655298, 524290, 11, -720835, 524290, 11, -786372, 524290, 11, -393149, 393218, 9, -458686, 393218, 9, -524223, 393218, 9, -589760, 393218, 9, -655297, 393218, 9, -720834, 393218, 9, -786371, 393218, 9, -786370, 131074, 10, -786369, 131074, 10, -786368, 131074, 10, -786367, 131074, 10, -786366, 131074, 10, -786365, 131074, 10, -720829, 131074, 10, -655293, 131074, 10, -589757, 131074, 10, -524221, 131074, 10, -458685, 393218, 8, -524222, 393218, 8, -589758, 131074, 10, -655294, 131074, 10, -655295, 131074, 10, -589759, 393218, 8, -655296, 131074, 10, -720832, 131074, 10, -720833, 131074, 10, -720831, 131074, 10, -720830, 131074, 10, -393147, 458754, 8, -917469, 589826, 8, -786442, 131074, 11, -720906, 524290, 13, -655370, 524290, 12, -589834, 524290, 13, -524298, 524290, 12, -458762, 524290, 13, -393226, 524290, 12, -327690, 524290, 13, -262154, 524290, 12, -196618, 524290, 13, -131082, 524290, 12, -786441, 131074, 11, -786440, 131074, 11, -786439, 131074, 11, -786438, 131074, 11, -786437, 131074, 11, -786436, 131074, 11, -786435, 131074, 11, -786434, 131074, 11, -786433, 131074, 11, -851968, 131074, 11, -851967, 131074, 11, -851966, 131074, 11, -851965, 131074, 11, -851964, 131074, 11, -851963, 131074, 11, -851962, 131074, 11, -851961, 131074, 11, -851960, 131074, 11, -851959, 131074, 11, -851958, 131074, 11, -851957, 131074, 11, -851956, 131074, 11, -851955, 131074, 11, -851954, 131074, 11, -851953, 131074, 11, -851952, 131074, 11, -851951, 131074, 11, -851950, 131074, 11, -851949, 131074, 11, -851948, 131074, 11, -851947, 131074, 11, -851946, 131074, 11, -851945, 131074, 11, -851944, 131074, 11, -851943, 131074, 11, -851942, 131074, 11, -851941, 131074, 11, -851940, 131074, 11, -851939, 131074, 11, -851938, 131074, 11, -851937, 131074, 11, -851936, 131074, 11, -851935, 131074, 11, -851934, 131074, 11, -524283, 131074, 11, -589819, 131074, 11, -655355, 131074, 11, -720891, 131074, 11, -786427, 131074, 11, -786428, 131074, 11, -786429, 131074, 11, -786430, 131074, 11, -786431, 131074, 11, -786432, 131074, 11, -720897, 131074, 11, -720898, 131074, 11, -720899, 131074, 11, -720900, 131074, 11, -720901, 131074, 11, -720902, 131074, 11, -720903, 131074, 11, -720904, 131074, 11, -720905, 131074, 11, -655369, 131074, 11, -589833, 131074, 11, -524297, 131074, 11, -458761, 131074, 11, -393225, 131074, 11, -327689, 131074, 11, -262153, 131074, 11, -196617, 131074, 11, -131081, 131074, 11, -131080, 131074, 11, -196616, 131074, 11, -262152, 131074, 11, -327688, 131074, 11, -393224, 131074, 11, -458760, 131074, 11, -524296, 131074, 11, -589832, 131074, 11, -655368, 131074, 11, -655367, 131074, 11, -589831, 131074, 11, -524295, 131074, 11, -458759, 131074, 11, -393223, 131074, 11, -327687, 131074, 11, -262151, 131074, 11, -196615, 131074, 11, -131079, 131074, 11, -131078, 131074, 11, -196614, 131074, 11, -262150, 131074, 11, -327686, 131074, 11, -393222, 131074, 11, -458758, 131074, 11, -524294, 131074, 11, -589830, 131074, 11, -655366, 131074, 11, -655365, 131074, 11, -589829, 131074, 11, -524293, 131074, 11, -458757, 131074, 11, -393221, 131074, 11, -327685, 131074, 11, -262149, 131074, 11, -196613, 131074, 11, -196612, 131074, 11, -262148, 131074, 11, -327684, 131074, 11, -393220, 131074, 11, -458756, 131074, 11, -524292, 131074, 11, -589828, 131074, 11, -655364, 131074, 11, -655363, 131074, 11, -589827, 131074, 11, -524291, 131074, 11, -458755, 131074, 11, -393219, 131074, 11, -327683, 131074, 11, -262147, 131074, 11, -196611, 131074, 11, -131075, 131074, 11, -131076, 131074, 11, -131074, 131074, 11, -196610, 131074, 11, -262146, 131074, 11, -327682, 131074, 11, -393218, 131074, 11, -458754, 131074, 11, -524290, 131074, 11, -589826, 131074, 11, -655362, 131074, 11, -655361, 131074, 11, -589825, 131074, 11, -524289, 131074, 11, -458753, 131074, 11, -393217, 131074, 11, -327681, 131074, 11, -262145, 131074, 11, -196609, 131074, 11, -131073, 131074, 11, -196608, 131074, 11, -262144, 131074, 11, -327680, 131074, 11, -393216, 131074, 11, -458752, 131074, 11, -524288, 131074, 11, -589824, 131074, 11, -655360, 131074, 11, -720896, 131074, 11, -720895, 131074, 11, -655359, 131074, 11, -589823, 131074, 11, -524287, 131074, 11, -458751, 131074, 11, -393215, 131074, 11, -327679, 131074, 11, -262143, 131074, 11, -196607, 131074, 11, -196606, 131074, 11, -262142, 131074, 11, -327678, 131074, 11, -393214, 131074, 11, -458750, 131074, 11, -524286, 131074, 11, -589822, 131074, 11, -655358, 131074, 11, -720894, 131074, 11, -720893, 131074, 11, -655357, 131074, 11, -589821, 131074, 11, -524285, 131074, 11, -458749, 131074, 11, -393213, 131074, 11, -327677, 131074, 11, -262141, 131074, 11, -196605, 131074, 11, -196604, 131074, 11, -262140, 131074, 11, -327676, 131074, 11, -393212, 131074, 11, -458748, 131074, 11, -524284, 131074, 11, -589820, 131074, 11, -655356, 131074, 11, -720892, 131074, 11, -458747, 131074, 11, -393211, 131074, 11, -327675, 131074, 11, -262139, 131074, 11, -196603, 131074, 11, -196602, 131074, 11, -262138, 131074, 11, -327674, 131074, 11, -393210, 131074, 11, -458746, 131074, 11, -524282, 131074, 11, -589818, 131074, 11, -655354, 131074, 11, -720890, 131074, 11, -786426, 131074, 11, -786425, 131074, 11, -720889, 131074, 11, -655353, 131074, 11, -589817, 131074, 11, -524281, 131074, 11, -458745, 131074, 11, -393209, 131074, 11, -327673, 131074, 11, -262137, 131074, 11, -196601, 131074, 11, -196600, 131074, 11, -262136, 131074, 11, -327672, 131074, 11, -393208, 131074, 11, -458744, 131074, 11, -524280, 131074, 11, -589816, 131074, 11, -655352, 131074, 11, -720888, 131074, 11, -786424, 131074, 11, -786423, 131074, 11, -720887, 131074, 11, -655351, 131074, 11, -589815, 131074, 11, -524279, 131074, 11, -458743, 131074, 11, -393207, 131074, 11, -327671, 131074, 11, -262135, 131074, 11, -196599, 131074, 11, -196598, 131074, 11, -262134, 131074, 11, -327670, 131074, 11, -393206, 131074, 11, -458742, 131074, 11, -524278, 131074, 11, -589814, 131074, 11, -655350, 131074, 11, -720886, 131074, 11, -786422, 131074, 11, -786421, 131074, 11, -720885, 131074, 11, -655349, 131074, 11, -589813, 131074, 11, -524277, 131074, 11, -458741, 131074, 11, -393205, 131074, 11, -327669, 131074, 11, -262133, 131074, 11, -196597, 131074, 11, -196596, 131074, 11, -262132, 131074, 11, -327668, 131074, 11, -393204, 131074, 11, -458740, 131074, 11, -524276, 131074, 11, -589812, 131074, 11, -655348, 131074, 11, -720884, 131074, 11, -786420, 131074, 11, -786419, 131074, 11, -720883, 131074, 11, -655347, 131074, 11, -589811, 131074, 11, -524275, 131074, 11, -458739, 131074, 11, -393203, 131074, 11, -327667, 131074, 11, -262131, 131074, 11, -196595, 131074, 11, -196594, 131074, 11, -262130, 131074, 11, -327666, 131074, 11, -393202, 131074, 11, -458738, 131074, 11, -524274, 131074, 11, -589810, 131074, 11, -655346, 131074, 11, -720882, 131074, 11, -786418, 131074, 11, -786417, 131074, 11, -720881, 131074, 11, -655345, 131074, 11, -589809, 131074, 11, -524273, 131074, 11, -458737, 131074, 11, -393201, 131074, 11, -327665, 131074, 11, -262129, 131074, 11, -196593, 131074, 11, -196592, 131074, 11, -262128, 131074, 11, -327664, 131074, 11, -393200, 131074, 11, -458736, 131074, 11, -524272, 131074, 11, -589808, 131074, 11, -655344, 131074, 11, -720880, 131074, 11, -786416, 131074, 11, -786415, 131074, 11, -720879, 131074, 11, -655343, 131074, 11, -589807, 131074, 11, -524271, 131074, 11, -458735, 131074, 11, -393199, 131074, 11, -327663, 131074, 11, -262127, 131074, 11, -196591, 131074, 11, -196590, 131074, 11, -262126, 131074, 11, -327662, 131074, 11, -393198, 131074, 11, -458734, 131074, 11, -524270, 131074, 11, -589806, 131074, 11, -655342, 131074, 11, -720878, 131074, 11, -786414, 131074, 11, -786413, 131074, 11, -720877, 131074, 11, -655341, 131074, 11, -589805, 131074, 11, -524269, 131074, 11, -458733, 131074, 11, -393197, 131074, 11, -327661, 131074, 11, -262125, 131074, 11, -196589, 131074, 11, -196588, 131074, 11, -262124, 131074, 11, -327660, 131074, 11, -393196, 131074, 11, -458732, 131074, 11, -524268, 131074, 11, -589804, 131074, 11, -655340, 131074, 11, -720876, 131074, 11, -786412, 131074, 11, -786411, 131074, 11, -720875, 131074, 11, -655339, 131074, 11, -589803, 131074, 11, -524267, 131074, 11, -458731, 131074, 11, -393195, 131074, 11, -327659, 131074, 11, -262123, 131074, 11, -196587, 131074, 11, -196586, 131074, 11, -262122, 131074, 11, -327658, 131074, 11, -393194, 131074, 11, -458730, 131074, 11, -524266, 131074, 11, -589802, 131074, 11, -655338, 131074, 11, -720874, 131074, 11, -786410, 131074, 11, -786409, 131074, 11, -720873, 131074, 11, -655337, 131074, 11, -589801, 131074, 11, -524265, 131074, 11, -458729, 131074, 11, -393193, 131074, 11, -327657, 131074, 11, -262121, 131074, 11, -196585, 131074, 11, -196584, 131074, 11, -262120, 131074, 11, -327656, 131074, 11, -393192, 131074, 11, -458728, 131074, 11, -524264, 131074, 11, -589800, 131074, 11, -655336, 131074, 11, -720872, 131074, 11, -786408, 131074, 11, -786407, 131074, 11, -720871, 131074, 11, -655335, 131074, 11, -589799, 131074, 11, -524263, 131074, 11, -458727, 131074, 11, -393191, 131074, 11, -327655, 131074, 11, -262119, 131074, 11, -196583, 131074, 11, -196582, 131074, 11, -262118, 131074, 11, -327654, 131074, 11, -393190, 131074, 11, -458726, 131074, 11, -524262, 131074, 11, -589798, 131074, 11, -655334, 131074, 11, -720870, 131074, 11, -786406, 131074, 11, -786405, 131074, 11, -720869, 131074, 11, -655333, 131074, 11, -589797, 131074, 11, -524261, 131074, 11, -458725, 131074, 11, -393189, 131074, 11, -327653, 131074, 11, -262117, 131074, 11, -196581, 131074, 11, -196580, 131074, 11, -262116, 131074, 11, -327652, 131074, 11, -393188, 131074, 11, -458724, 131074, 11, -524260, 131074, 11, -589796, 131074, 11, -655332, 131074, 11, -720868, 131074, 11, -786404, 131074, 11, -786403, 131074, 11, -720867, 131074, 11, -655331, 131074, 11, -589795, 131074, 11, -524259, 131074, 11, -458723, 131074, 11, -393187, 131074, 11, -327651, 131074, 11, -262115, 131074, 11, -196579, 131074, 11, -196578, 131074, 11, -262114, 131074, 11, -327650, 131074, 11, -393186, 131074, 11, -458722, 131074, 11, -524258, 131074, 11, -589794, 131074, 11, -655330, 131074, 11, -720866, 131074, 11, -786402, 131074, 11, -786401, 131074, 11, -720865, 131074, 11, -655329, 131074, 11, -589793, 131074, 11, -524257, 131074, 11, -458721, 131074, 11, -393185, 131074, 11, -327649, 131074, 11, -262113, 131074, 11, -196577, 131074, 11, -196576, 131074, 11, -262112, 131074, 11, -327648, 131074, 11, -393184, 131074, 11, -458720, 131074, 11, -524256, 131074, 11, -589792, 131074, 11, -655328, 131074, 11, -720864, 131074, 11, -786400, 131074, 11, -786399, 131074, 11, -720863, 131074, 11, -655327, 131074, 11, -589791, 131074, 11, -524255, 131074, 11, -458719, 131074, 11, -393183, 131074, 11, -327647, 131074, 11, -262111, 131074, 11, -196575, 131074, 11, -917499, 131074, 11, -917500, 131074, 11, -917501, 131074, 11, -917502, 131074, 11, -917503, 131074, 11, -917504, 131074, 11, -851969, 131074, 11, -851970, 131074, 11, -851971, 131074, 11, -851972, 131074, 11, -851973, 131074, 11, -851974, 131074, 11, -851975, 131074, 11, -851976, 131074, 11, -851977, 131074, 11, -851978, 131074, 11, -917498, 131074, 11, -917497, 131074, 11, -917496, 131074, 11, -917495, 131074, 11, -917494, 131074, 11, -917493, 131074, 11, -917492, 131074, 11, -917491, 131074, 11, -917490, 131074, 11, -917489, 131074, 11, -917488, 131074, 11, -917487, 131074, 11, -917486, 131074, 11, -917485, 131074, 11, -917484, 131074, 11, -917483, 131074, 11, -917482, 131074, 11, -917481, 131074, 11, -917480, 131074, 11, -917479, 131074, 11, -917478, 131074, 11, -917477, 131074, 11, -917476, 131074, 11, -917475, 131074, 11, -917474, 131074, 11, -917473, 131074, 11, -917472, 131074, 11, -917471, 131074, 11, -917470, 131074, 11, -524218, 131074, 11, -589754, 131074, 11, -655290, 131074, 11, -720826, 131074, 11, -786362, 131074, 11, -458682, 131074, 11, -393146, 131074, 11, -327610, 131074, 11, -262074, 131074, 11, -196538, 131074, 11, -131002, 131074, 11, -65466, 131074, 11, 70, 131074, 11, 65606, 131074, 11, 131142, 131074, 11, 196678, 131074, 11, 262214, 131074, 11, 327750, 131074, 11, 393286, 131074, 11, 393285, 131074, 11, 393284, 131074, 11, 393283, 131074, 11, 393282, 131074, 11, 393281, 131074, 11, 393280, 131074, 11, 393279, 131074, 11, 393278, 131074, 11, 393277, 131074, 11, 393276, 131074, 11, 393275, 131074, 11, 393274, 131074, 11, 393273, 131074, 11, 393272, 131074, 11, 393271, 131074, 11, 393270, 131074, 11, 393269, 131074, 11, 393268, 131074, 11, 393267, 131074, 11, 393266, 131074, 11, 393265, 131074, 11, 393264, 131074, 11, 393263, 131074, 11, 393262, 131074, 11, 393261, 131074, 11, 393260, 131074, 11, 393259, 131074, 11, 393258, 131074, 11, 393257, 131074, 11, 393256, 131074, 11, 393255, 131074, 11, 393254, 131074, 11, 393253, 131074, 11, 393252, 131074, 11, 393251, 131074, 11, 393250, 131074, 11, 393249, 131074, 11, 393248, 131074, 11, 393247, 131074, 11, 393246, 131074, 11, 393245, 131074, 11, 393244, 131074, 11, 393243, 131074, 11, 393242, 131074, 11, 393241, 131074, 11, 393240, 131074, 11, 393239, 131074, 11, 393238, 131074, 11, 393237, 131074, 11, 393236, 131074, 11, 393235, 131074, 11, 393234, 131074, 11, 393233, 131074, 11, 393232, 131074, 11)

[node name="Player" parent="." instance=ExtResource("1_2j0oh")]
position = Vector2(18, 46)

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="Player"]
remote_path = NodePath("../../Camera2D")

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(18, 46)
offset = Vector2(0, -23.175)
zoom = Vector2(7, 7)
process_callback = 0
position_smoothing_enabled = true
drag_horizontal_enabled = true
drag_vertical_enabled = true
script = ExtResource("2_2yv34")

[node name="ClosetDoor" type="CharacterBody2D" parent="."]
position = Vector2(341, 38)
script = ExtResource("4_tm4xm")

[node name="closet_collision" type="CollisionShape2D" parent="ClosetDoor"]
position = Vector2(214, -8.84375)
shape = SubResource("RectangleShape2D_putcj")

[node name="monster_closet_detector" type="Area2D" parent="ClosetDoor"]
position = Vector2(2, 0)
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClosetDoor/monster_closet_detector"]
position = Vector2(611, -105.688)
shape = SubResource("RectangleShape2D_putcj")

[node name="Boss" parent="ClosetDoor" instance=ExtResource("5_wglk5")]
position = Vector2(325, -69)
scale = Vector2(1.8, 1.8)
inCloset = true

[node name="HealthFlute" parent="." instance=ExtResource("6_nke6d")]
position = Vector2(165, 54)

[node name="HealthFlute2" parent="." instance=ExtResource("6_nke6d")]
position = Vector2(195, 52)

[node name="HealthFlute3" parent="." instance=ExtResource("6_nke6d")]
position = Vector2(227, 52)

[node name="HealthFlute4" parent="." instance=ExtResource("6_nke6d")]
position = Vector2(260, 53)

[node name="HealthFlute5" parent="." instance=ExtResource("6_nke6d")]
position = Vector2(290, 53)

[node name="LevelTransitionArea" type="Area2D" parent="."]
position = Vector2(822.91, 3.28403)
collision_layer = 0
collision_mask = 2
script = ExtResource("7_gso8k")
targetLevel = "res://test_level1.tscn"
inCloset = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="LevelTransitionArea"]
position = Vector2(17.0905, 19.716)
shape = SubResource("CapsuleShape2D_midoo")

[node name="SummonTimerLabel" type="RichTextLabel" parent="."]
offset_left = 807.0
offset_top = -130.0
offset_right = 852.0
offset_bottom = -108.0
text = "5"
script = ExtResource("8_feafo")

[node name="ClosetSensitiveMusic" type="AudioStreamPlayer" parent="."]
stream = ExtResource("10_7cphs")
volume_db = -0.7
script = ExtResource("11_yqeep")

[connection signal="doneZooming" from="Camera2D" to="ClosetDoor/Boss" method="_on_camera_2d_done_zooming"]
[connection signal="doneZooming" from="Camera2D" to="ClosetSensitiveMusic" method="_on_camera_2d_done_zooming"]
[connection signal="closed" from="ClosetDoor" to="LevelTransitionArea" method="_on_closet_door_closed"]
[connection signal="closed" from="ClosetDoor" to="ClosetSensitiveMusic" method="_on_closet_door_closed"]
[connection signal="body_exited" from="ClosetDoor/monster_closet_detector" to="Camera2D" method="_on_monster_closet_detector_body_exited"]
[connection signal="body_exited" from="ClosetDoor/monster_closet_detector" to="ClosetDoor" method="_on_monster_closet_detector_body_exited"]
[connection signal="zoomOut" from="ClosetDoor/Boss" to="Camera2D" method="_on_boss_zoom_out"]
[connection signal="body_entered" from="LevelTransitionArea" to="LevelTransitionArea" method="_on_body_entered"]
